/**
 * Daor
 * Api for DAOR MMORPG server.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: julien.lebourg@ctg.lu
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIInventoryApi.h"

#include "OpenAPIHTTPValidationError.h"
#include "OpenAPIInventoryBase.h"

namespace OpenAPI
{

/* Delete All

*/
class OPENAPI_API OpenAPIInventoryApi::RouteInventoryDeleteRequest : public Request
{
public:
    virtual ~RouteInventoryDeleteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIInventoryApi::RouteInventoryDeleteResponse : public Response
{
public:
    virtual ~RouteInventoryDeleteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPIInventoryBase> Content;
};

/* Get All

*/
class OPENAPI_API OpenAPIInventoryApi::RouteInventoryGetRequest : public Request
{
public:
    virtual ~RouteInventoryGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	TOptional<int32> Skip;
	TOptional<int32> Limit;
};

class OPENAPI_API OpenAPIInventoryApi::RouteInventoryGetResponse : public Response
{
public:
    virtual ~RouteInventoryGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPIInventoryBase> Content;
};

/* Delete One

*/
class OPENAPI_API OpenAPIInventoryApi::RouteInventoryItemIdDeleteRequest : public Request
{
public:
    virtual ~RouteInventoryItemIdDeleteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	int32 ItemId = 0;
};

class OPENAPI_API OpenAPIInventoryApi::RouteInventoryItemIdDeleteResponse : public Response
{
public:
    virtual ~RouteInventoryItemIdDeleteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIInventoryBase Content;
};

/* Get One

*/
class OPENAPI_API OpenAPIInventoryApi::RouteInventoryItemIdGetRequest : public Request
{
public:
    virtual ~RouteInventoryItemIdGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	int32 ItemId = 0;
};

class OPENAPI_API OpenAPIInventoryApi::RouteInventoryItemIdGetResponse : public Response
{
public:
    virtual ~RouteInventoryItemIdGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIInventoryBase Content;
};

/* Update One

*/
class OPENAPI_API OpenAPIInventoryApi::RouteInventoryItemIdPutRequest : public Request
{
public:
    virtual ~RouteInventoryItemIdPutRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	int32 ItemId = 0;
	OpenAPIInventoryBase OpenAPIInventoryBase;
};

class OPENAPI_API OpenAPIInventoryApi::RouteInventoryItemIdPutResponse : public Response
{
public:
    virtual ~RouteInventoryItemIdPutResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIInventoryBase Content;
};

/* Create One

*/
class OPENAPI_API OpenAPIInventoryApi::RouteInventoryPostRequest : public Request
{
public:
    virtual ~RouteInventoryPostRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPIInventoryBase OpenAPIInventoryBase;
};

class OPENAPI_API OpenAPIInventoryApi::RouteInventoryPostResponse : public Response
{
public:
    virtual ~RouteInventoryPostResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIInventoryBase Content;
};

}
