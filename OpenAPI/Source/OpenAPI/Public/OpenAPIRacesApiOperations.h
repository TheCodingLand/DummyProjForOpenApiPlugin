/**
 * Daor
 * Api for DAOR MMORPG server.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: julien.lebourg@ctg.lu
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIRacesApi.h"

#include "OpenAPIHTTPValidationError.h"
#include "OpenAPIRaceBase.h"

namespace OpenAPI
{

/* Delete All

*/
class OPENAPI_API OpenAPIRacesApi::RouteRacesDeleteRequest : public Request
{
public:
    virtual ~RouteRacesDeleteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIRacesApi::RouteRacesDeleteResponse : public Response
{
public:
    virtual ~RouteRacesDeleteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPIRaceBase> Content;
};

/* Get All

*/
class OPENAPI_API OpenAPIRacesApi::RouteRacesGetRequest : public Request
{
public:
    virtual ~RouteRacesGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	TOptional<int32> Skip;
	TOptional<int32> Limit;
};

class OPENAPI_API OpenAPIRacesApi::RouteRacesGetResponse : public Response
{
public:
    virtual ~RouteRacesGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPIRaceBase> Content;
};

/* Delete One

*/
class OPENAPI_API OpenAPIRacesApi::RouteRacesItemIdDeleteRequest : public Request
{
public:
    virtual ~RouteRacesItemIdDeleteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	int32 ItemId = 0;
};

class OPENAPI_API OpenAPIRacesApi::RouteRacesItemIdDeleteResponse : public Response
{
public:
    virtual ~RouteRacesItemIdDeleteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIRaceBase Content;
};

/* Get One

*/
class OPENAPI_API OpenAPIRacesApi::RouteRacesItemIdGetRequest : public Request
{
public:
    virtual ~RouteRacesItemIdGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	int32 ItemId = 0;
};

class OPENAPI_API OpenAPIRacesApi::RouteRacesItemIdGetResponse : public Response
{
public:
    virtual ~RouteRacesItemIdGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIRaceBase Content;
};

/* Update One

*/
class OPENAPI_API OpenAPIRacesApi::RouteRacesItemIdPutRequest : public Request
{
public:
    virtual ~RouteRacesItemIdPutRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	int32 ItemId = 0;
	OpenAPIRaceBase OpenAPIRaceBase;
};

class OPENAPI_API OpenAPIRacesApi::RouteRacesItemIdPutResponse : public Response
{
public:
    virtual ~RouteRacesItemIdPutResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIRaceBase Content;
};

/* Create One

*/
class OPENAPI_API OpenAPIRacesApi::RouteRacesPostRequest : public Request
{
public:
    virtual ~RouteRacesPostRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPIRaceBase OpenAPIRaceBase;
};

class OPENAPI_API OpenAPIRacesApi::RouteRacesPostResponse : public Response
{
public:
    virtual ~RouteRacesPostResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIRaceBase Content;
};

}
