/**
 * Daor
 * Api for DAOR MMORPG server.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: julien.lebourg@ctg.lu
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPICharactersApi.h"

#include "OpenAPICharacterBase.h"
#include "OpenAPIHTTPValidationError.h"

namespace OpenAPI
{

/* Delete All

*/
class OPENAPI_API OpenAPICharactersApi::RouteCharactersDeleteRequest : public Request
{
public:
    virtual ~RouteCharactersDeleteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPICharactersApi::RouteCharactersDeleteResponse : public Response
{
public:
    virtual ~RouteCharactersDeleteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPICharacterBase> Content;
};

/* Get All

*/
class OPENAPI_API OpenAPICharactersApi::RouteCharactersGetRequest : public Request
{
public:
    virtual ~RouteCharactersGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	TOptional<int32> Skip;
	TOptional<int32> Limit;
};

class OPENAPI_API OpenAPICharactersApi::RouteCharactersGetResponse : public Response
{
public:
    virtual ~RouteCharactersGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPICharacterBase> Content;
};

/* Delete One

*/
class OPENAPI_API OpenAPICharactersApi::RouteCharactersItemIdDeleteRequest : public Request
{
public:
    virtual ~RouteCharactersItemIdDeleteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	int32 ItemId = 0;
};

class OPENAPI_API OpenAPICharactersApi::RouteCharactersItemIdDeleteResponse : public Response
{
public:
    virtual ~RouteCharactersItemIdDeleteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPICharacterBase Content;
};

/* Get One

*/
class OPENAPI_API OpenAPICharactersApi::RouteCharactersItemIdGetRequest : public Request
{
public:
    virtual ~RouteCharactersItemIdGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	int32 ItemId = 0;
};

class OPENAPI_API OpenAPICharactersApi::RouteCharactersItemIdGetResponse : public Response
{
public:
    virtual ~RouteCharactersItemIdGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPICharacterBase Content;
};

/* Update One

*/
class OPENAPI_API OpenAPICharactersApi::RouteCharactersItemIdPutRequest : public Request
{
public:
    virtual ~RouteCharactersItemIdPutRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	int32 ItemId = 0;
	OpenAPICharacterBase OpenAPICharacterBase;
};

class OPENAPI_API OpenAPICharactersApi::RouteCharactersItemIdPutResponse : public Response
{
public:
    virtual ~RouteCharactersItemIdPutResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPICharacterBase Content;
};

/* Create One

*/
class OPENAPI_API OpenAPICharactersApi::RouteCharactersPostRequest : public Request
{
public:
    virtual ~RouteCharactersPostRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPICharacterBase OpenAPICharacterBase;
};

class OPENAPI_API OpenAPICharactersApi::RouteCharactersPostResponse : public Response
{
public:
    virtual ~RouteCharactersPostResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPICharacterBase Content;
};

}
