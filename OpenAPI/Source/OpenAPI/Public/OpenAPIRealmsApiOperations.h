/**
 * Daor
 * Api for DAOR MMORPG server.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: julien.lebourg@ctg.lu
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIRealmsApi.h"

#include "OpenAPIHTTPValidationError.h"
#include "OpenAPIRealmBase.h"

namespace OpenAPI
{

/* Delete All

*/
class OPENAPI_API OpenAPIRealmsApi::RouteRealmsDeleteRequest : public Request
{
public:
    virtual ~RouteRealmsDeleteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIRealmsApi::RouteRealmsDeleteResponse : public Response
{
public:
    virtual ~RouteRealmsDeleteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPIRealmBase> Content;
};

/* Get All

*/
class OPENAPI_API OpenAPIRealmsApi::RouteRealmsGetRequest : public Request
{
public:
    virtual ~RouteRealmsGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	TOptional<int32> Skip;
	TOptional<int32> Limit;
};

class OPENAPI_API OpenAPIRealmsApi::RouteRealmsGetResponse : public Response
{
public:
    virtual ~RouteRealmsGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPIRealmBase> Content;
};

/* Delete One

*/
class OPENAPI_API OpenAPIRealmsApi::RouteRealmsItemIdDeleteRequest : public Request
{
public:
    virtual ~RouteRealmsItemIdDeleteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	int32 ItemId = 0;
};

class OPENAPI_API OpenAPIRealmsApi::RouteRealmsItemIdDeleteResponse : public Response
{
public:
    virtual ~RouteRealmsItemIdDeleteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIRealmBase Content;
};

/* Get One

*/
class OPENAPI_API OpenAPIRealmsApi::RouteRealmsItemIdGetRequest : public Request
{
public:
    virtual ~RouteRealmsItemIdGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	int32 ItemId = 0;
};

class OPENAPI_API OpenAPIRealmsApi::RouteRealmsItemIdGetResponse : public Response
{
public:
    virtual ~RouteRealmsItemIdGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIRealmBase Content;
};

/* Update One

*/
class OPENAPI_API OpenAPIRealmsApi::RouteRealmsItemIdPutRequest : public Request
{
public:
    virtual ~RouteRealmsItemIdPutRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	int32 ItemId = 0;
	OpenAPIRealmBase OpenAPIRealmBase;
};

class OPENAPI_API OpenAPIRealmsApi::RouteRealmsItemIdPutResponse : public Response
{
public:
    virtual ~RouteRealmsItemIdPutResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIRealmBase Content;
};

/* Create One

*/
class OPENAPI_API OpenAPIRealmsApi::RouteRealmsPostRequest : public Request
{
public:
    virtual ~RouteRealmsPostRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPIRealmBase OpenAPIRealmBase;
};

class OPENAPI_API OpenAPIRealmsApi::RouteRealmsPostResponse : public Response
{
public:
    virtual ~RouteRealmsPostResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIRealmBase Content;
};

}
