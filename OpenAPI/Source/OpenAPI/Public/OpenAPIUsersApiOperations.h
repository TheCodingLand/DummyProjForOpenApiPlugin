/**
 * Daor
 * Api for DAOR MMORPG server.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: julien.lebourg@ctg.lu
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIUsersApi.h"

#include "OpenAPIHTTPValidationError.h"
#include "OpenAPIUserBase.h"

namespace OpenAPI
{

/* Delete All

*/
class OPENAPI_API OpenAPIUsersApi::RouteUsersDeleteRequest : public Request
{
public:
    virtual ~RouteUsersDeleteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

};

class OPENAPI_API OpenAPIUsersApi::RouteUsersDeleteResponse : public Response
{
public:
    virtual ~RouteUsersDeleteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPIUserBase> Content;
};

/* Get All

*/
class OPENAPI_API OpenAPIUsersApi::RouteUsersGetRequest : public Request
{
public:
    virtual ~RouteUsersGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	TOptional<int32> Skip;
	TOptional<int32> Limit;
};

class OPENAPI_API OpenAPIUsersApi::RouteUsersGetResponse : public Response
{
public:
    virtual ~RouteUsersGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPIUserBase> Content;
};

/* Delete One

*/
class OPENAPI_API OpenAPIUsersApi::RouteUsersItemIdDeleteRequest : public Request
{
public:
    virtual ~RouteUsersItemIdDeleteRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	int32 ItemId = 0;
};

class OPENAPI_API OpenAPIUsersApi::RouteUsersItemIdDeleteResponse : public Response
{
public:
    virtual ~RouteUsersItemIdDeleteResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIUserBase Content;
};

/* Get One

*/
class OPENAPI_API OpenAPIUsersApi::RouteUsersItemIdGetRequest : public Request
{
public:
    virtual ~RouteUsersItemIdGetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	int32 ItemId = 0;
};

class OPENAPI_API OpenAPIUsersApi::RouteUsersItemIdGetResponse : public Response
{
public:
    virtual ~RouteUsersItemIdGetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIUserBase Content;
};

/* Update One

*/
class OPENAPI_API OpenAPIUsersApi::RouteUsersItemIdPutRequest : public Request
{
public:
    virtual ~RouteUsersItemIdPutRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	int32 ItemId = 0;
	OpenAPIUserBase OpenAPIUserBase;
};

class OPENAPI_API OpenAPIUsersApi::RouteUsersItemIdPutResponse : public Response
{
public:
    virtual ~RouteUsersItemIdPutResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIUserBase Content;
};

/* Create One

*/
class OPENAPI_API OpenAPIUsersApi::RouteUsersPostRequest : public Request
{
public:
    virtual ~RouteUsersPostRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPIUserBase OpenAPIUserBase;
};

class OPENAPI_API OpenAPIUsersApi::RouteUsersPostResponse : public Response
{
public:
    virtual ~RouteUsersPostResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIUserBase Content;
};

}
