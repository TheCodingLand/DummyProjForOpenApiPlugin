/**
 * Daor
 * Api for DAOR MMORPG server.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: julien.lebourg@ctg.lu
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPICharacterBase.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPICharacterBase::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("id")); WriteJsonValue(Writer, Id);
	if (UserId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("user_id")); WriteJsonValue(Writer, UserId.GetValue());
	}
	Writer->WriteIdentifierPrefix(TEXT("name")); WriteJsonValue(Writer, Name);
	Writer->WriteIdentifierPrefix(TEXT("class")); WriteJsonValue(Writer, _Class);
	Writer->WriteIdentifierPrefix(TEXT("gender")); WriteJsonValue(Writer, Gender);
	Writer->WriteIdentifierPrefix(TEXT("health")); WriteJsonValue(Writer, Health);
	Writer->WriteIdentifierPrefix(TEXT("mana")); WriteJsonValue(Writer, Mana);
	Writer->WriteIdentifierPrefix(TEXT("level")); WriteJsonValue(Writer, Level);
	Writer->WriteIdentifierPrefix(TEXT("experience")); WriteJsonValue(Writer, Experience);
	Writer->WriteIdentifierPrefix(TEXT("clan")); WriteJsonValue(Writer, Clan);
	if (Posx.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("posx")); WriteJsonValue(Writer, Posx.GetValue());
	}
	if (Posy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("posy")); WriteJsonValue(Writer, Posy.GetValue());
	}
	if (Posz.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("posz")); WriteJsonValue(Writer, Posz.GetValue());
	}
	Writer->WriteIdentifierPrefix(TEXT("rotation_yaw")); WriteJsonValue(Writer, RotationYaw);
	if (EquipHead.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("equip_head")); WriteJsonValue(Writer, EquipHead.GetValue());
	}
	if (EquipChest.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("equip_chest")); WriteJsonValue(Writer, EquipChest.GetValue());
	}
	if (EquipHands.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("equip_hands")); WriteJsonValue(Writer, EquipHands.GetValue());
	}
	if (EquipFeet.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("equip_feet")); WriteJsonValue(Writer, EquipFeet.GetValue());
	}
	if (Hotbar0.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar0")); WriteJsonValue(Writer, Hotbar0.GetValue());
	}
	if (Hotbar1.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar1")); WriteJsonValue(Writer, Hotbar1.GetValue());
	}
	if (Hotbar2.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar2")); WriteJsonValue(Writer, Hotbar2.GetValue());
	}
	if (Hotbar3.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar3")); WriteJsonValue(Writer, Hotbar3.GetValue());
	}
	if (Hotbar4.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar4")); WriteJsonValue(Writer, Hotbar4.GetValue());
	}
	if (Hotbar5.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar5")); WriteJsonValue(Writer, Hotbar5.GetValue());
	}
	if (Hotbar6.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar6")); WriteJsonValue(Writer, Hotbar6.GetValue());
	}
	if (Hotbar7.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar7")); WriteJsonValue(Writer, Hotbar7.GetValue());
	}
	if (Hotbar8.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar8")); WriteJsonValue(Writer, Hotbar8.GetValue());
	}
	if (Hotbar9.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar9")); WriteJsonValue(Writer, Hotbar9.GetValue());
	}
	if (Hotbar10.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar10")); WriteJsonValue(Writer, Hotbar10.GetValue());
	}
	if (Hotbar11.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar11")); WriteJsonValue(Writer, Hotbar11.GetValue());
	}
	if (Hotbar12.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar12")); WriteJsonValue(Writer, Hotbar12.GetValue());
	}
	if (Hotbar13.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar13")); WriteJsonValue(Writer, Hotbar13.GetValue());
	}
	if (Hotbar14.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar14")); WriteJsonValue(Writer, Hotbar14.GetValue());
	}
	if (Hotbar15.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar15")); WriteJsonValue(Writer, Hotbar15.GetValue());
	}
	if (Hotbar16.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar16")); WriteJsonValue(Writer, Hotbar16.GetValue());
	}
	if (Hotbar17.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar17")); WriteJsonValue(Writer, Hotbar17.GetValue());
	}
	if (Hotbar18.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar18")); WriteJsonValue(Writer, Hotbar18.GetValue());
	}
	if (Hotbar19.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar19")); WriteJsonValue(Writer, Hotbar19.GetValue());
	}
	if (Hotbar20.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar20")); WriteJsonValue(Writer, Hotbar20.GetValue());
	}
	if (Hotbar21.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar21")); WriteJsonValue(Writer, Hotbar21.GetValue());
	}
	if (Hotbar22.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar22")); WriteJsonValue(Writer, Hotbar22.GetValue());
	}
	if (Hotbar23.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar23")); WriteJsonValue(Writer, Hotbar23.GetValue());
	}
	if (Hotbar24.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar24")); WriteJsonValue(Writer, Hotbar24.GetValue());
	}
	if (Hotbar25.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar25")); WriteJsonValue(Writer, Hotbar25.GetValue());
	}
	if (Hotbar26.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar26")); WriteJsonValue(Writer, Hotbar26.GetValue());
	}
	if (Hotbar27.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar27")); WriteJsonValue(Writer, Hotbar27.GetValue());
	}
	if (Hotbar28.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar28")); WriteJsonValue(Writer, Hotbar28.GetValue());
	}
	if (Hotbar29.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("hotbar29")); WriteJsonValue(Writer, Hotbar29.GetValue());
	}
	Writer->WriteIdentifierPrefix(TEXT("stamina")); WriteJsonValue(Writer, Stamina);
	if (RealmId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("realm_id")); WriteJsonValue(Writer, RealmId.GetValue());
	}
	if (RaceId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("race_id")); WriteJsonValue(Writer, RaceId.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPICharacterBase::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("id"), Id);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("user_id"), UserId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("name"), Name);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("class"), _Class);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("gender"), Gender);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("health"), Health);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("mana"), Mana);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("level"), Level);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("experience"), Experience);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("clan"), Clan);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("posx"), Posx);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("posy"), Posy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("posz"), Posz);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("rotation_yaw"), RotationYaw);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("equip_head"), EquipHead);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("equip_chest"), EquipChest);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("equip_hands"), EquipHands);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("equip_feet"), EquipFeet);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar0"), Hotbar0);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar1"), Hotbar1);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar2"), Hotbar2);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar3"), Hotbar3);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar4"), Hotbar4);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar5"), Hotbar5);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar6"), Hotbar6);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar7"), Hotbar7);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar8"), Hotbar8);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar9"), Hotbar9);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar10"), Hotbar10);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar11"), Hotbar11);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar12"), Hotbar12);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar13"), Hotbar13);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar14"), Hotbar14);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar15"), Hotbar15);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar16"), Hotbar16);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar17"), Hotbar17);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar18"), Hotbar18);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar19"), Hotbar19);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar20"), Hotbar20);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar21"), Hotbar21);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar22"), Hotbar22);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar23"), Hotbar23);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar24"), Hotbar24);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar25"), Hotbar25);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar26"), Hotbar26);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar27"), Hotbar27);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar28"), Hotbar28);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("hotbar29"), Hotbar29);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("stamina"), Stamina);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("realm_id"), RealmId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("race_id"), RaceId);

	return ParseSuccess;
}

}
